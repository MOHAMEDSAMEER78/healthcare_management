services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "patient_data:1:1"
      KAFKA_MESSAGE_MAX_BYTES: 209715200
      KAFKA_REPLICA_FETCH_MAX_BYTES: 209715200
      KAFKA_MAX_REQUEST_SIZE: 209715200
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: unless-stopped

  edge_node:
    build:
      context: .
      dockerfile: edge_node/Dockerfile.edge
    ports:
      - "8000:8000"
    environment:
      - DJANGO_ENV=development
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  central_node:
    build:
      context: .
      dockerfile: central_edge_node/Dockerfile.central
    ports:
      - "8001:8001"
    environment:
      - DJANGO_ENV=development
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - edge_node
    restart: unless-stopped

  cloud_server:
    build:
      context: .
      dockerfile: cloud_server/Dockerfile.cloud
    ports:
      - "8002:8002"
    environment:
      - DJANGO_ENV=development
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - central_node
    restart: unless-stopped

networks:
  default:
    driver: bridge
